Next steps:
- implement vector indexing operators (VM side), e.g. v[1] returns the x component
- implement vector mutators, e.g v[1] sets x to 1

Syntactic sugar & convenience:
- dot3(), dot4(), cross(), normalize()
- implement missing operators: vec*scalar, vec/scalar
- component accessors, e.g. v.x
- implement objlen for vectors? #v should return 4?

Clean up:
- move all new functions to math module
- should lua_tovec() always return 'const float*' ? (remove lua_tocvec()?)
  do we ever need to change locals? probably not...
- 'const float*' -> 'lua_Vec' ?

Issues:
- should luaO_rawequalObj() in lobject.c have a case for LUA_TVEC?
- binary compatibility with standard lua? type indices have changed, so binaries compiled with
  standard luac probably don't work with lua-vec interpreter
- the following define in lstate.h sounds a bit suspicious: #define BASIC_CI_SIZE 8
  if it is the max size of basic data types we should increase it to 16 (4xfloat = 16 bytes)
